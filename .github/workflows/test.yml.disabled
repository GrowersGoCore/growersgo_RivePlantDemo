name: CI_tests

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
    paths:
      - "lib/**/*.dart"
      - "android/**/*"
      - "ios/**/*"
      - "pubspec.yaml"
      - ".github/workflows/*"
  pull_request:
    branches:
      - main
    types:
      - labeled
      - unlabeled
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  check_conditions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-output-parameter
      # https://docs.github.com/en/actions/learn-github-actions/contexts#needs-context
      # https://monadical.com/posts/filters-github-actions.html#Create-your-own-skip-ci-%F0%9F%A4%94
      - name: check if commit message contains keywords to skip tests
        id: should_skip
        run: |
          message=$(git log -1 --pretty=format:'%s')
          re="\[(doc|skip-tests|skip_tests|skip)\]"
          if [[ ! $message =~ $re ]]; then
            # echo "::set-output name=SHOULD_SKIP::false"
            echo "SHOULD_SKIP=false" >> "$GITHUB_OUTPUT"
            echo "$message -> Is good to go"
          else
            # echo "::set-output name=SHOULD_SKIP::true"
            echo "SHOULD_SKIP=true" >> "$GITHUB_OUTPUT"
            echo "$message -> Contains skip, skip-ci or skip_ci, thus skipping tests"
          fi

      - name: check if commit message contains keywords to force tests
        id: should_run
        run: |
          message=$(git log -1 --pretty=format:'%s')
          re="\[(ci|run-ci|run_ci)\]"
          if [[ $message =~ $re ]]; then
            # echo "::set-output name=SHOULD_RUN::true"
            echo "SHOULD_RUN=true" >> "$GITHUB_OUTPUT"
            echo "$message -> Contains ci, run-ci or run_ci, do run tests"
          else
            # echo "::set-output name=SHOULD_RUN::false"
            echo "SHOULD_RUN=false" >> "$GITHUB_OUTPUT"
            echo "$message -> No forced run found"
          fi

    outputs:
      should_run: ${{ github.event_name == 'workflow_dispatch' ||
        (steps.should_skip.outputs.SHOULD_SKIP != 'true' &&
        (github.ref_name == 'production' ||
        steps.should_run.outputs.SHOULD_RUN == 'true' ||
        ((contains(github.event.pull_request.labels.*.name, 'ci') && github.event.action == 'labeled') ||
        (contains(github.event.pull_request.labels.*.name, 'wip') && github.event.action == 'unlabeled')))) }}

  test:
    name: flutter test
    needs: check_conditions
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ needs.check_conditions.outputs.should_run == 'true' }}
    steps:
      - uses: actions/checkout@v3.5.2

      - name: Read .tool-versions
        uses: marocchino/tool-versions-action@v1
        id: versions

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.versions.outputs.flutter }}
          channel: "stable"

      - run: flutter test

  debug:
    needs:
      - check_conditions
      - test
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    steps:
      - uses: actions/checkout@v3
      - run: ./debug
